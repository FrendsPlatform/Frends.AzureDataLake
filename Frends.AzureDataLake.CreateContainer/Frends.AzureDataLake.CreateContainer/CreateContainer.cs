using System;
using System.Threading;
using System.Threading.Tasks;
using System.ComponentModel;
using Frends.AzureDataLake.CreateContainer.Definitions;
using Azure.Storage.Files.DataLake;
using Azure.Identity;

namespace Frends.AzureDataLake.CreateContainer;

/// <summary>
/// Azure Data Lake Task.
/// </summary>
public static class AzureDataLake
{
    /// <summary>
    /// Frends Task for creating a container to Azure Data Lake.
    /// [Documentation](https://tasks.frends.com/tasks/frends-tasks/Frends.AzureDataLake.CreateContainer)
    /// </summary>
    /// <param name="input">Input parameters.</param>
    /// <param name="cancellationToken">Token generated by Frends to stop this task.</param>
    /// <returns>Object { bool Success, string Uri }</returns>
    public static async Task<Result> CreateContainer([PropertyTab] Input input, CancellationToken cancellationToken)
    {
        try
        {
            DataLakeFileSystemClient container = GetDataLakeContainer(input);
            await container.CreateIfNotExistsAsync(null,  cancellationToken);
            return new Result(true, container.Uri.ToString());
        }
        catch (Exception ex)
        {
            throw new Exception("Creating a new container caused an exception.", ex);
        }
    }

    private static DataLakeFileSystemClient GetDataLakeContainer(Input input)
    {
        try
        {
            DataLakeServiceClient dataLakeServiceClient;

            switch (input.ConnectionMethod)
            {
                case ConnectionMethod.ConnectionString:
                    dataLakeServiceClient = new DataLakeServiceClient(input.ConnectionString);
                    return dataLakeServiceClient.GetFileSystemClient(input.ContainerName);
                case ConnectionMethod.OAuth2:
                    var credentials = new ClientSecretCredential(input.TenantID, input.ApplicationID, input.ClientSecret, new ClientSecretCredentialOptions());
                    dataLakeServiceClient = new DataLakeServiceClient(new Uri($"https://{input.StorageAccountName}.dfs.core.windows.net"), credentials);
                    return dataLakeServiceClient.GetFileSystemClient(input.ContainerName);
                default: throw new NotSupportedException();
            }
        }
        catch (Exception ex)
        {
            throw new Exception($"GetDataLakeContainer error: {ex}");
        }
    }
}
